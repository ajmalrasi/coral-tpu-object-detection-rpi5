name: CI

on:
  push:
    branches: [ "main", "dev" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ajmalrasi/detection_server

jobs:
  unit-tests:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9.16
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.16"

    - name: Install Lint dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 ${{github.workspace}}/server --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 ${{github.workspace}}/server --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install testing dependencies
      run: |
        if [ -f ${{github.workspace}}/tests/tests_requirements.txt ]; then pip install -r ${{github.workspace}}/tests/tests_requirements.txt --extra-index-url https://google-coral.github.io/py-repo/ pycoral; fi   
  
    - name: Test with pytest
      env:
        PYTHONPATH: ${PYTHONPATH}:${{github.workspace}}
      run: |
        pytest ${{github.workspace}}/tests

  build-publish-docker-image:

    runs-on: ubuntu-latest
    needs: unit-tests 
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
        with:
          driver-opts: image=moby/buildkit:master 
          
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 'Init Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_MLOPS_SECRETS }}

      - name: 'Authenticate to Google Cloud'
        run: |
          gcloud auth activate-service-account ${{ secrets.GCP_MLOPS_SECRETS }}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Copy files from GCP bucket
        run: |
          gsutil cp gs://ar-mlops-artifacts/models/dev/model.tflite .
          gsutil ls gs://ar-mlops-artifacts/labels/dev/labels.txt .
          ls

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ${{github.workspace}}/server
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
